function toggle_panel_visibility($lateral_panel, $background_layer, $body) {
    $lateral_panel.hasClass("speed-in") ? (// firefox transitions break when parent overflow is changed, so we need to wait for the end of the trasition to give the body an overflow hidden
    $lateral_panel.removeClass("speed-in").one("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend", function() {
        $body.removeClass("overflow-hidden");
    }), $background_layer.removeClass("is-visible")) : ($lateral_panel.addClass("speed-in").one("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend", function() {
        $body.addClass("overflow-hidden");
    }), $background_layer.addClass("is-visible"));
}

function move_navigation($navigation, $MQ) {
    $(window).width() >= $MQ ? ($navigation.detach(), 
    //$navigation.appendTo('header');
    $navigation.insertAfter("header > .wrap > .logo")) : ($navigation.detach(), 
    $navigation.insertAfter("header"));
}

jQuery(document).ready(function($) {
    // if you change this breakpoint in the style.css file (or _layout.scss if you use SASS), don't forget to update this value as well
    var $L = 868, $menu_navigation = $("#main-nav"), $cart_trigger = $("#cart-trigger"), $hamburger_icon = $("#hamburger-menu"), $lateral_cart = $("#cart"), $shadow_layer = $("#shadow-layer");
    // open lateral menu on mobile
    $hamburger_icon.on("click", function(event) {
        event.preventDefault(), //close cart panel (if it's open)
        $lateral_cart.removeClass("speed-in"), toggle_panel_visibility($menu_navigation, $shadow_layer, $("body"));
    }), // open cart
    $cart_trigger.on("click", function(event) {
        event.preventDefault(), //close lateral menu (if it's open)
        $menu_navigation.removeClass("speed-in"), toggle_panel_visibility($lateral_cart, $shadow_layer, $("body"));
    }), // close lateral cart or lateral menu
    $shadow_layer.on("click", function() {
        $shadow_layer.removeClass("is-visible"), // firefox transitions break when parent overflow is changed, so we need to wait for the end of the trasition to give the body an overflow hidden
        $lateral_cart.hasClass("speed-in") ? ($lateral_cart.removeClass("speed-in").on("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend", function() {
            $("body").removeClass("overflow-hidden");
        }), $menu_navigation.removeClass("speed-in")) : ($menu_navigation.removeClass("speed-in").on("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend", function() {
            $("body").removeClass("overflow-hidden");
        }), $lateral_cart.removeClass("speed-in"));
    }), // move #main-navigation inside header on laptop
    // insert #main-navigation after header on mobile
    move_navigation($menu_navigation, $L), $(window).on("resize", function() {
        move_navigation($menu_navigation, $L), $(window).width() >= $L && $menu_navigation.hasClass("speed-in") && ($menu_navigation.removeClass("speed-in"), 
        $shadow_layer.removeClass("is-visible"), $("body").removeClass("overflow-hidden"));
    });
}), $("select").each(function() {
    var $this = $(this), numberOfOptions = $(this).children("option").length;
    $this.addClass("select-hidden"), $this.wrap('<div class="select"></div>'), 
    $this.after('<div class="select-styled"></div>');
    var $styledSelect = $this.next("div.select-styled");
    $styledSelect.text($this.children("option").eq(0).text());
    for (var $list = $("<ul />", {
        class: "select-options"
    }).insertAfter($styledSelect), i = 0; numberOfOptions > i; i++) $("<li />", {
        text: $this.children("option").eq(i).text(),
        rel: $this.children("option").eq(i).val()
    }).appendTo($list);
    var $listItems = $list.children("li");
    $styledSelect.click(function(e) {
        e.stopPropagation(), $("div.select-styled.active").each(function() {
            $(this).removeClass("active").next("ul.select-options").hide();
        }), $(this).toggleClass("active").next("ul.select-options").toggle();
    }), $listItems.click(function(e) {
        e.stopPropagation(), $styledSelect.text($(this).text()).removeClass("active"), 
        $this.val($(this).attr("rel")), $list.hide();
    }), $(document).click(function() {
        $styledSelect.removeClass("active"), $list.hide();
    });
}), // Test Product Quick View
$(".quick-view").on("click", function() {
    $(".product-card").show();
}), $(".product-card__close").on("click", function() {
    $(".product-card").hide();
});